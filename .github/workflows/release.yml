name: Release Dispatch

on:
  repository_dispatch:
    types: [release-command]
jobs:
  create-release-branch:
    runs-on: ubuntu-latest
    steps:
    - name: Get Environment Info
      id: env_info
      run: |
        ISSUE_TITLE=$(jq -r .client_payload.github.payload.issue.title $GITHUB_EVENT_PATH)
        echo ::set-output name=release::$(git ls-remote --heads https://github.com/$GITHUB_REPOSITORY $ISSUE_TITLE)
        echo ::set-output name=issuenm::$(jq .client_payload.github.payload.issue.number $GITHUB_EVENT_PATH)
        echo ::set-output name=issuetitle::$ISSUE_TITLE

    - name: Create Release Branch
      uses: peterjgrainger/action-create-branch@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        branch: "${{ steps.env_info.outputs.issuetitle }}"
      if: ${{ steps.env_info.outputs.release == null }}

    - name: Alert that release already exists
      run: |
        echo "Release branch ${{ steps.env_info.outputs.issuetitle }} already exists. Skipping..."
      if: ${{ steps.env_info.outputs.release != null }}

    - name: Check if label exists
      uses: actions/github-script@v1
      id: label_check
      continue-on-error: true
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.issues.getLabel({
            owner: context.repo.owner,
            repo: context.repo.repo,
            name: "${{ steps.env_info.outputs.issuetitle }}"
          })

    - name: Create label to be used for release
      uses: actions/github-script@v1
      id: create_label
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.issues.createLabel({
            owner: context.repo.owner,
            repo: context.repo.repo,
            name: "${{ steps.env_info.outputs.issuetitle }}",
            color: "2d5893"
          })
      if: ${{ steps.label_check.outcome == 'failure' }}

    - name: Apply label to issue
      uses: actions/github-script@v1
      if: ${{ steps.create_label.outcome == 'success' }}
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: ${{steps.env_info.outputs.issuenm}},
            labels: ["${{ steps.env_info.outputs.issuetitle }}"]
          })

  update-release-pointers:
    runs-on: ubuntu-latest
    needs: create-release-branch
    env:
      URL: ${{ secrets.RELEASE_NOTIFICATON_URL }}

      ## String to match for ImageTag replacement where applicable
      ImageTagMatchString: 'imageTag:.*'

      ## End-to-End (E2E) testing -  match string and replacement string
      e2eTestMatchString: 'enabled: true'
      e2eDisableReplacementString: 'enabled: false'

      ## Versions assignment for components that need both version and imageTag
      FrontendVersion: ${{ github.event.client_payload.slash_command.frontend }}
      FrontendImageVersion: 'imageTag: ${{ github.event.client_payload.slash_command.frontend }}'
      BackendVersion: ${{ github.event.client_payload.slash_command.backend }}
      BackendImageVersion: 'imageTag: ${{ github.event.client_payload.slash_command.backend }}'
      GitApiVersion: ${{ github.event.client_payload.slash_command.gitapi }}
      GitApiImageVersion: 'imageTag: ${{ github.event.client_payload.slash_command.gitapi }}'
      StatusVersion: ${{ github.event.client_payload.slash_command.status }}
      StatusImageVersion: 'imageTag: ${{ github.event.client_payload.slash_command.status }}'
      ConfigVersion: ${{ github.event.client_payload.slash_command.config }}
      ConfigImageVersion: 'imageTag: ${{ github.event.client_payload.slash_command.config }}'
      ActivityVersion: ${{ github.event.client_payload.slash_command.activity }}
      ActivityImageVersion: 'imageTag: ${{ github.event.client_payload.slash_command.activity }}'
      ParticipantsVersion: ${{ github.event.client_payload.slash_command.participants }}
      ParticipantsImageVersion: 'imageTag: ${{ github.event.client_payload.slash_command.participants }}'
      ArtifactsVersion: ${{ github.event.client_payload.slash_command.artifacts }}
      ArtifactsImageVersion: 'imageTag: ${{ github.event.client_payload.slash_command.artifacts }}'
      DispatcherVersion: ${{ github.event.client_payload.slash_command.dispatcher }}
      DispatcherImageVersion: 'imageTag: ${{ github.event.client_payload.slash_command.dispatcher }}'

      ## Versions assignment
      AgnosticVVersion: ${{ github.event.client_payload.slash_command.agnosticv }}
      AnarchyVersion: ${{ github.event.client_payload.slash_command.anarchy }}
      PoolBoyVersion: ${{ github.event.client_payload.slash_command.poolboy }}

      ## Variables for Status Service Versions - matching and replacement strings
      Versions_FrontendMatchString: 'lodestar-frontend:.*'
      Versions_FrontendVersion: 'lodestar-frontend:  ${{ github.event.client_payload.slash_command.frontend }}'
      Versions_BackendMatchString: 'lodestar-backend:.*'
      Versions_BackendVersion: 'lodestar-backend: ${{ github.event.client_payload.slash_command.backend }}'
      Versions_GitApiMatchString: 'lodestar-git-api:.*'
      Versions_GitApiVersion: 'lodestar-git-api: ${{ github.event.client_payload.slash_command.gitapi }}'
      Versions_StatusMatchString: 'lodestar-status:.*'
      Versions_StatusVersion: 'lodestar-status: ${{ github.event.client_payload.slash_command.status }}'
      Versions_ConfigMatchString: 'lodestar-config:.*'
      Versions_ConfigVersion: 'lodestar-config: ${{ github.event.client_payload.slash_command.config }}'
      Versions_ActivityMatchString: 'lodestar-activity:.*'
      Versions_ActivityVersion: 'lodestar-activity: ${{ github.event.client_payload.slash_command.activity }}'
      Versions_ParticipantsMatchString: 'lodestar-participants:.*'
      Versions_ParticipantsVersion: 'lodestar-participants: ${{ github.event.client_payload.slash_command.participants }}'
      Versions_ArtifactsMatchString: 'lodestar-artifacts:.*'
      Versions_ArtifactsVersion: 'lodestar-artifacts: ${{ github.event.client_payload.slash_command.artifacts }}'
      Versions_DispatcherMatchString: 'resource-dispatcher:.*'
      Versions_DispatcherVersion: 'resource-dispatcher: ${{ github.event.client_payload.slash_command.dispatcher }}'
      Versions_AgnosticVMatchString: 'agnosticv-operator:.*'
      Versions_AgnosticVVersion: 'agnosticv-operator: ${{ github.event.client_payload.slash_command.agnosticv }}'
      Versions_AnarchyMatchString: 'anarchy:.*'
      Versions_AnarchyVersion: 'anarchy: ${{ github.event.client_payload.slash_command.anarchy }}'
      Versions_PoolBoyMatchString: 'poolboy:.*'
      Versions_PoolBoyVersion: 'poolboy: ${{ github.event.client_payload.slash_command.poolboy }}'

      ## LodeStar Overall Version String - value obtained at runtime
      Versions_LodeStarMatchString: 'lodestar:.*'


    steps:
    - name: Get Environment Info
      id: env_info
      run: |
        ISSUE_TITLE=$(jq -r .client_payload.github.payload.issue.title $GITHUB_EVENT_PATH)
        echo ::set-output name=issuetitle::$ISSUE_TITLE
        echo ::set-output name=issuenm::$(jq .client_payload.github.payload.issue.number $GITHUB_EVENT_PATH)
        echo ::set-output name=comment_url::$(jq .client_payload.github.payload.comment.html_url $GITHUB_EVENT_PATH)
        echo ::set-output name=lodestarVersion::"lodestar: ${ISSUE_TITLE}"

    - uses: actions/checkout@v2
      with:
        ref: ${{ steps.env_info.outputs.issuetitle }}

    - name: Update LodeStar Frontend Release Info
      if: ${{ github.event.client_payload.slash_command.frontend != null }}
      uses: mikefarah/yq@v4.9.6
      with:
        cmd: >
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(e2eTestMatchString),strenv(e2eDisableReplacementString))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-frontend.yaml ;
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(ImageTagMatchString),strenv(FrontendImageVersion))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-frontend.yaml ;
              yq -i e '.spec.source.targetRevision = env(FrontendVersion)' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-frontend.yaml ;
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(Versions_FrontendMatchString),strenv(Versions_FrontendVersion))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;

    - name: Update LodeStar Backend Release Info
      if: ${{ github.event.client_payload.slash_command.backend != null }}
      uses: mikefarah/yq@v4.9.6
      with:
        cmd: >
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(ImageTagMatchString),strenv(BackendImageVersion))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-backend.yaml ;
              yq -i e '.spec.source.targetRevision = env(BackendVersion)' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-backend.yaml ;
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(Versions_BackendMatchString),strenv(Versions_BackendVersion))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;

    - name: Update LodeStar Git API Release Info
      if: ${{ github.event.client_payload.slash_command.gitapi != null }}
      uses: mikefarah/yq@v4.9.6
      with:
        cmd: >
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(ImageTagMatchString),strenv(GitApiImageVersion))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-git-api.yaml ;
              yq -i e '.spec.source.targetRevision = env(GitApiVersion)' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-git-api.yaml ;
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(Versions_GitApiMatchString),strenv(Versions_GitApiVersion))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;

    - name: Update LodeStar Config Release Info
      if: ${{ github.event.client_payload.slash_command.config != null }}
      uses: mikefarah/yq@v4.9.6
      with:
        cmd: >
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(ImageTagMatchString),strenv(ConfigImageVersion)| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-config.yaml ;
              yq -i e '.spec.source.targetRevision = env(ConfigVersion)' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-config.yaml ;
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(Versions_ConfigMatchString),strenv(Versions_ConfigVersion))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;

    - name: Update LodeStar Activity Release Info
      if: ${{ github.event.client_payload.slash_command.activity != null }}
      uses: mikefarah/yq@v4.9.6
      with:
        cmd: >
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(ImageTagMatchString),strenv(ActivityImageVersion)| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-activity.yaml ;
              yq -i e '.spec.source.targetRevision = env(ActivityVersion)' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-activity.yaml ;
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(Versions_ActivityMatchString),strenv(Versions_ActivityVersion))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;

    - name: Update LodeStar Participants Release Info
      if: ${{ github.event.client_payload.slash_command.participants != null }}
      uses: mikefarah/yq@v4.9.6
      with:
        cmd: >
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(ImageTagMatchString),strenv(ParticipantsImageVersion)| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-participants.yaml ;
              yq -i e '.spec.source.targetRevision = env(ParticipantsVersion)' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-participants.yaml ;
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(Versions_ParticipantsMatchString),strenv(Versions_ParticipantsVersion))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;

    - name: Update LodeStar Artifacts Release Info
      if: ${{ github.event.client_payload.slash_command.activity != null }}
      uses: mikefarah/yq@v4.9.6
      with:
        cmd: >
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(ImageTagMatchString),strenv(ArtifactsImageVersion)| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-artifacts.yaml ;
              yq -i e '.spec.source.targetRevision = env(ArtifactsVersion)' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-artifacts.yaml ;
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(Versions_ArtifactsMatchString),strenv(Versions_ArtifactsVersion))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;

    - name: Update Resource Dispatcher Release Info
      if: ${{ github.event.client_payload.slash_command.dispatcher != null }}
      uses: mikefarah/yq@v4.9.6
      with:
        cmd: >
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(ImageTagMatchString),strenv(DispatcherImageVersion))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/resource-dispatcher.yaml ;
              yq -i e '.spec.source.targetRevision = env(DispatcherVersion)' $GITHUB_WORKSPACE/bootstrap/patches/resource-dispatcher.yaml ;
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(Versions_DispatcherMatchString),strenv(Versions_DispatcherVersion))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;

    - name: Update Babylon / AgnosticV Operator Release Info
      if: ${{ github.event.client_payload.slash_command.agnosticv != null }}
      uses: mikefarah/yq@v4.9.6
      with:
        cmd: >
              yq -i e '.spec.source.targetRevision = env(AgnosticVVersion)' $GITHUB_WORKSPACE/bootstrap/patches/agnosticv-operator.yaml ;
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(Versions_AgnosticVMatchString),strenv(Versions_AgnosticVVersion))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;

    - name: Update Babylon / Anarchy Operator Release Info
      if: ${{ github.event.client_payload.slash_command.anarchy != null }}
      uses: mikefarah/yq@v4.9.6
      with:
        cmd: >
              yq -i e '.spec.source.targetRevision = env(AnarchyVersion)' $GITHUB_WORKSPACE/bootstrap/patches/anarchy-operator.yaml ;
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(Versions_AnarchyMatchString),strenv(Versions_AnarchyVersion))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;

    - name: Update Babylon / Poolboy Release Info
      if: ${{ github.event.client_payload.slash_command.poolboy != null }}
      uses: mikefarah/yq@v4.9.6
      with:
        cmd: >
              yq -i e '.spec.source.targetRevision = env(PoolBoyVersion)' $GITHUB_WORKSPACE/bootstrap/patches/poolboy.yaml ;
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(Versions_PoolBoyMatchString),strenv(Versions_PoolBoyVersion))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;

    - name: Update LodeStar Status Release Info
      if: ${{ github.event.client_payload.slash_command.status != null }}
      uses: mikefarah/yq@v4.9.6
      with:
        cmd: >
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(ImageTagMatchString),strenv(StatusImageVersion))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;
              yq -i e '.spec.source.targetRevision = env(StatusVersion)' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(Versions_StatusMatchString),strenv(Versions_StatusVersion))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;

    - name: Update LodeStar Overall Version Info
      uses: mikefarah/yq@v4.9.6
      with:
        cmd: >
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(Versions_LodeStarMatchString),"${{ steps.env_info.outputs.lodestarVersion }}")| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;

    - name: Commit Release Changes
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        branch: "${{ steps.env_info.outputs.issuetitle }}"
        commit_message: "Merging changes requested from ${{ steps.env_info.outputs.comment_url }}"

    # - name: 'Get Previous tag'
    #   id: previoustag
    #   uses: actions-ecosystem/action-get-latest-tag@v1

    - name: Fetch Previous Release Info
      id: previous_release
      uses: pozetroninc/github-action-get-latest-release@master
      with:
        repository: rht-labs/lodestar-deployment

    - name: Generate Release Body
      id: release_body
      run: |
        echo ::set-output name=text::$(git log ${{ steps.previous_release.outputs.release }}..HEAD --pretty=format:"- %h %s by %an" --no-merges)

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ steps.env_info.outputs.issuetitle }}
        release_name: ${{ steps.env_info.outputs.issuetitle }}
        body: ${{ steps.release_body.outputs.text }}
        draft: false
        prerelease: false

    - name: Create Release Comment
      uses: peter-evans/create-or-update-comment@v1
      with:
        repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
        issue-number: "${{ steps.env_info.outputs.issuenm }}"
        body: |
          Created release ${{ steps.env_info.outputs.issuetitle }}!

    - name: Notify Chat
      run: |
       echo "Thread key ${{ steps.env_info.outputs.threadKey }} issue ${{ steps.env_info.outputs.issuenm }} "
        [ ! -z "$URL" ] && curl "$URL&threadKey=$GITHUB_REPOSITORY-${{ steps.env_info.outputs.issuenm}}" -H "Content-Type: application/json" -d '{ "text" : "Release created *${{ steps.env_info.outputs.issuetitle }}*" }'
