name: Release Dispatch

on:
  repository_dispatch:
    types: [release-command]
jobs:
  create-release-branch:
    runs-on: ubuntu-latest
    steps:
    - name: Get Environment Info
      id: env_info
      run: |
        ISSUE_TITLE=$(jq -r .client_payload.github.payload.issue.title $GITHUB_EVENT_PATH)
        echo ::set-output name=release::$(git ls-remote --heads https://github.com/$GITHUB_REPOSITORY $ISSUE_TITLE)
        echo ::set-output name=issuenm::$(jq .client_payload.github.payload.issue.number $GITHUB_EVENT_PATH)
        echo ::set-output name=issuetitle::$ISSUE_TITLE
    - name: Create release branch
      uses: peterjgrainger/action-create-branch@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        branch: "${{ steps.env_info.outputs.issuetitle }}"
      if: ${{ steps.env_info.outputs.release == null }}
    - name: Alert that release already exists
      run: |
        echo "Release branch ${{ steps.env_info.outputs.issuetitle }} already exists. Skipping..."
      if: ${{ steps.env_info.outputs.release != null }}
    - name: Check if label exists
      uses: actions/github-script@v1
      id: label_check
      continue-on-error: true
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.issues.getLabel({
            owner: context.repo.owner,
            repo: context.repo.repo,
            name: "${{ steps.env_info.outputs.issuetitle }}"
          })
    - name: Create label to be used for release
      uses: actions/github-script@v1
      id: create_label
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.issues.createLabel({
            owner: context.repo.owner,
            repo: context.repo.repo,
            name: "${{ steps.env_info.outputs.issuetitle }}",
            color: "2d5893"
          })
      if: ${{ steps.label_check.outcome == 'failure' }}
    - name: Apply label to issue
      uses: actions/github-script@v1
      if: ${{ steps.create_label.outcome == 'success' }}
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: ${{steps.env_info.outputs.issuenm}},
            labels: ["${{ steps.env_info.outputs.issuetitle }}"]
          })

  update-release-pointers:
    runs-on: ubuntu-latest
    needs: create-release-branch
    env:
      URL: ${{ secrets.RELEASE_NOTIFICATON_URL }}
      ImTagStr: 'imageTag:.*'
      e2eStr: 'enabled: true'
      e2eDisRepl: 'enabled: false'
      FrontendVer: ${{ github.event.client_payload.slash_command.frontend }}
      FrontImVer: 'imageTag: ${{ github.event.client_payload.slash_command.frontend }}'
      BackendVer: ${{ github.event.client_payload.slash_command.backend }}
      BackImVer: 'imageTag: ${{ github.event.client_payload.slash_command.backend }}'
      GitApiVer: ${{ github.event.client_payload.slash_command.gitapi }}
      GitApiImVer: 'imageTag: ${{ github.event.client_payload.slash_command.gitapi }}'
      DispatcherVer: ${{ github.event.client_payload.slash_command.dispatcher }}
      DispatcherImVer: 'imageTag: ${{ github.event.client_payload.slash_command.dispatcher }}'
      AgnVVer: ${{ github.event.client_payload.slash_command.agnosticv }}
      AnarchyVer: ${{ github.event.client_payload.slash_command.anarchy }}
      PoolBVer: ${{ github.event.client_payload.slash_command.poolboy }}
      StatusVer: ${{ github.event.client_payload.slash_command.status }}
      StatusImVer: 'imageTag: ${{ github.event.client_payload.slash_command.status }}'
      ## Lodestar Config has only imageTag specified
      ConfigImVer: 'imageTag: ${{ github.event.client_payload.slash_command.status }}'
      #Variables for Status page
      SFrontStr: 'lodestar-frontend:.*'
      SBackStr: 'lodestar-backend:.*'
      SGitApiStr: 'lodestar-git-api:.*'
      SStatusStr: 'lodestar-status:.*'
      SConfigStr: 'lodestar-config:.*'
      SDispatchStr: 'resource-dispatcher:.*'
      SAgnosticVStr: 'agnosticv-operator:.*'
      SAnarchyStr: 'anarchy:.*'
      SPoolBStr: 'poolboy:.*'
      SLodeStarStr: 'lodestar:.*'
      SFrontVer: 'lodestar-frontend:  ${{ github.event.client_payload.slash_command.frontend }}'
      SBackVer: 'lodestar-backend: ${{ github.event.client_payload.slash_command.backend }}'
      SGitApiVer: 'lodestar-git-api: ${{ github.event.client_payload.slash_command.gitapi }}'
      SStatusVer: 'lodestar-status: ${{ github.event.client_payload.slash_command.status }}'
      SConfigVer: 'lodestar-config: '    #### To be filled in
      SDispatchVer: 'resource-dispatcher: ${{ github.event.client_payload.slash_command.dispatcher }}'
      SAgnosticVVer: 'agnosticv-operator: ${{ github.event.client_payload.slash_command.agnosticv }}'
      SAnarchyVer: 'anarchy: ${{ github.event.client_payload.slash_command.anarchy }}'
      SPoolBVer: 'poolboy: ${{ github.event.client_payload.slash_command.poolboy }}'
      SLodeStarVer: 'lodestar: ${{ github.event.client_payload.slash_command.lodestar }}''

    steps:
    - name: Get Environment Info
      id: env_info
      run: |
        echo ::set-output name=issuetitle::$(jq -r .client_payload.github.payload.issue.title $GITHUB_EVENT_PATH)
        echo ::set-output name=issuenm::$(jq .client_payload.github.payload.issue.number $GITHUB_EVENT_PATH)
        echo ::set-output name=comment_url::$(jq .client_payload.github.payload.comment.html_url $GITHUB_EVENT_PATH)
    - uses: actions/checkout@v2
      with:
        ref: ${{ steps.env_info.outputs.issuetitle }}
    - name: Update Frontend ImageTag Version and disable E2E
      if: ${{ github.event.client_payload.slash_command.frontend != null }}
      uses: mikefarah/yq@v4.9.6
      with:
        cmd: >
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(e2eStr),strenv(e2eDisRepl))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-frontend.yaml ;
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(ImTagStr),strenv(FrontImVer))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-frontend.yaml ;
              yq -i e '.spec.source.targetRevision = env(FrontendVer)' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-frontend.yaml ;
    - name: Update Backend Release
      if: ${{ github.event.client_payload.slash_command.backend != null }}
      uses: mikefarah/yq@v4.9.6
      with:
         cmd: >
               yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(ImTagStr),strenv(BackImVer))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-backend.yaml ;
               yq -i e '.spec.source.targetRevision = env(BackendVer)' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-backend.yaml ;
    - name: Update Git API Release
      if: ${{ github.event.client_payload.slash_command.gitapi != null }}
      uses: mikefarah/yq@v4.9.6
      with:
        cmd: >
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(ImTagStr),strenv(GitApiImVer))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-git-api.yaml ;
              yq -i e '.spec.source.targetRevision = env(GitApiVer)' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-git-api.yaml ;
    - name: Update Config Release
      if: ${{ github.event.client_payload.slash_command.config != null }}
      uses: mikefarah/yq@v4.9.6
      with:
        cmd:  yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(ImTagStr),strenv(ConfigImVer)| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-config.yaml ;
    - name: Update Resource Dispatcher Release
      if: ${{ github.event.client_payload.slash_command.dispatcher != null }}
      uses: mikefarah/yq@v4.9.6
      with:
        cmd: >
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(ImTagStr),strenv(DispatcherImVer))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/resource-dispatcher.yaml ;
              yq -i e '.spec.source.targetRevision = env(DispatcherVer)' $GITHUB_WORKSPACE/bootstrap/patches/resource-dispatcher.yaml ;
    - name: Update AgnosticV Operator Release
      if: ${{ github.event.client_payload.slash_command.agnosticv != null }}
      uses: mikefarah/yq@v4.9.6
      with:
        cmd:  yq -i e '.spec.source.targetRevision = env(AgnVVer)' $GITHUB_WORKSPACE/bootstrap/patches/agnosticv-operator.yaml ;
    - name: Update Anarchy Operator Release
      if: ${{ github.event.client_payload.slash_command.anarchy != null }}
      uses: mikefarah/yq@v4.9.6
      with:
        cmd: yq -i e '.spec.source.targetRevision = env(AnarchyVer)' $GITHUB_WORKSPACE/bootstrap/patches/anarchy-operator.yaml ;
    - name: Update Poolboy Release
      if: ${{ github.event.client_payload.slash_command.poolboy != null }}
      uses: mikefarah/yq@v4.9.6
      with:
        cmd: yq -i e '.spec.source.targetRevision = env(PoolBVer)' $GITHUB_WORKSPACE/bootstrap/patches/poolboy.yaml ;
    - name: Update Status Release and Status Page
      if: ${{ github.event.client_payload.slash_command.status != null }}
      uses: mikefarah/yq@v4.9.6
      with:
        cmd: >
              yq -i e '. as $prnt | .spec.source.helm.values | . =  sub(strenv(ImTagStr),strenv(StatusImVer))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;
              yq -i e '.spec.source.targetRevision = env(StatusVer)' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status ;
              yq -i e '. as $prnt | .spec.source.helm.values.versions | . =  sub(strenv(SFrontStr),strenv(SFrontVer))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;
              yq -i e '. as $prnt | .spec.source.helm.values.versions | . =  sub(strenv(SBackStr),strenv(SBackVer))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;
              yq -i e '. as $prnt | .spec.source.helm.values.versions | . =  sub(strenv(SGitApiStr),strenv(SGitApiVer))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;
              yq -i e '. as $prnt | .spec.source.helm.values.versions | . =  sub(strenv(SStatusStr),strenv(SStatusVer))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;
              yq -i e '. as $prnt | .spec.source.helm.values.versions | . =  sub(strenv(SConfigStr),strenv(SConfigVer))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;
              yq -i e '. as $prnt | .spec.source.helm.values.versions | . =  sub(strenv(SDispatchStr),strenv(SDispatchVer))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;
              yq -i e '. as $prnt | .spec.source.helm.values.versions | . =  sub(strenv(SAgnosticVStr),strenv(SAgnosticVVer))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;
              yq -i e '. as $prnt | .spec.source.helm.values.versions | . =  sub(strenv(SAnarchyStr),strenv(SAnarchyVer))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;
              yq -i e '. as $prnt | .spec.source.helm.values.versions | . =  sub(strenv(SPoolBStr),strenv(SPoolBVer))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;
              yq -i e '. as $prnt | .spec.source.helm.values.versions | . =  sub(strenv(SLodeStarStr),strenv(SLodeStarVer))| $prnt' $GITHUB_WORKSPACE/bootstrap/patches/lodestar-status.yaml ;
    - name: Commit changes
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        branch: "${{ steps.env_info.outputs.issuetitle }}"
        commit_message: "Merging changes requested from ${{ steps.env_info.outputs.comment_url }}"
    # - name: 'Get Previous tag'
    #   id: previoustag
    #   uses: actions-ecosystem/action-get-latest-tag@v1
    - id: previous_release
      uses: pozetroninc/github-action-get-latest-release@master
      with:
        repository: rht-labs/lodestar-deployment
    - name: Generate Release Body
      id: release_body
      run: |
        echo ::set-output name=text::$(git log ${{ steps.previous_release.outputs.release }}..HEAD --pretty=format:"- %h %s by %an" --no-merges)
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ steps.env_info.outputs.issuetitle }}
        release_name: ${{ steps.env_info.outputs.issuetitle }}
        body: ${{ steps.release_body.outputs.text }}
        draft: false
        prerelease: false
    - name: Create comment
      uses: peter-evans/create-or-update-comment@v1
      with:
        repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
        issue-number: "${{ steps.env_info.outputs.issuenm }}"
        body: |
          Created release ${{ steps.env_info.outputs.issuetitle }}!

    - name: Notify chat
      run: |
       echo "Thread key ${{ steps.env_info.outputs.threadKey }} issue ${{ steps.env_info.outputs.issuenm }} "
        [ ! -z "$URL" ] && curl "$URL&threadKey=$GITHUB_REPOSITORY-${{ steps.env_info.outputs.issuenm}}" -H "Content-Type: application/json" -d '{ "text" : "Release created *${{ steps.env_info.outputs.issuetitle }}*" }'
